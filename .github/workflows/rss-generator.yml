name: Generate IAC RSS Feed

on:
  schedule:
    - cron: '10 1 * * *'  # JST 10:10 毎日
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Python dependencies
        run: python -m pip install --upgrade requests beautifulsoup4 lxml

      - name: Build RSS Feed
        run: |
          python <<'PY'
          import requests, datetime, email.utils, pathlib, html
          from bs4 import BeautifulSoup

          BASE = "https://iac.kyoto-u.ac.jp"
          LIST_URL = f"{BASE}/news-topics/"
          response = requests.get(LIST_URL)
          soup = BeautifulSoup(response.text, "lxml")

          items = []

          for art in soup.select("div.postBandWrap > article"):
              a = art.find("a")
              if not a:
                  continue
              link = a["href"]
              full_link = BASE + link if link.startswith("/") else link
              title = a.get_text(strip=True)

              # 個別記事ページから<time datetime="...">を取得
              detail_html = requests.get(full_link).text
              detail_soup = BeautifulSoup(detail_html, "lxml")
              time_tag = detail_soup.find("time")
              if time_tag and time_tag.has_attr("datetime"):
                  try:
                      dt = datetime.datetime.fromisoformat(time_tag["datetime"])
                  except Exception:
                      dt = datetime.datetime.now()
              else:
                  dt = datetime.datetime.now()

              pub = email.utils.format_datetime(dt)

              items.append(f"<item><title>{html.escape(title)}</title><link>{full_link}</link><pubDate>{pub}</pubDate></item>")

          now = email.utils.format_datetime(datetime.datetime.now())
          rss = (
              '<?xml version="1.0" encoding="UTF-8"?>'
              '<rss version="2.0"><channel>'
              '<title>IAC NEWS</title>'
              '<link>https://iac.kyoto-u.ac.jp/news-topics/</link>'
              '<description>京都大学IACの最新ニュース</description>'
              f'<lastBuildDate>{now}</lastBuildDate>'
              + "".join(items) +
              '</channel></rss>'
          )

          pathlib.Path("new_rss.xml").write_text(rss, encoding="utf-8")
          PY

      - name: Check for changes & stage file
        run: |
          if [ -f rss.xml ] && cmp -s new_rss.xml rss.xml; then
            echo "No content change"; exit 0; fi
          mv new_rss.xml rss.xml
          git add rss.xml

      - name: Commit & push if changed
        run: |
          if git diff --cached --quiet; then
            echo "Nothing to commit"; exit 0; fi
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git commit -m "Update RSS feed"
          git push
